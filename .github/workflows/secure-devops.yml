name: Secure DevOps Java CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: read
  security-events: write
  id-token: write
  
jobs:
  build-and-secure:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean verify

    - name: Run Semgrep (Static Analysis)
      uses: returntocorp/semgrep-action@v1
      with:
        config: 'auto'

    - name: Run Trivy (Dependency + IaC Scan)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'

    - name: Run Snyk Code Scan
      uses: snyk/actions/setup@master
      with:
        version: latest
    
    - name: Run Snyk test for Maven
      run: snyk test --all-projects
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    - name: Run Gitleaks (Secrets Detection)
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkov (IaC Security)
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-java

    - name: Dependabot Metadata
      if: github.actor == 'dependabot[bot]'
      uses: dependabot/fetch-metadata@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker Image
      run: docker build -t my-java-app:${{ github.sha }} .

    - name: Push to DockerHub (Optional)
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
        docker tag my-java-app:${{ github.sha }} ${{ secrets.DOCKER_USER }}/my-java-app:latest
        docker push ${{ secrets.DOCKER_USER }}/my-java-app:latest
